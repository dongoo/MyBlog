<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Lidong's blog]]></title>
  <subtitle><![CDATA[My life and My notes]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="https://blog.lidong.me/"/>
  <updated>2016-01-09T15:44:50.000Z</updated>
  <id>https://blog.lidong.me/</id>
  
  <author>
    <name><![CDATA[lidong]]></name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[CSS选择器]]></title>
    <link href="https://blog.lidong.me/2016/css-selectors/"/>
    <id>https://blog.lidong.me/2016/css-selectors/</id>
    <published>2016-01-08T14:58:44.000Z</published>
    <updated>2016-01-09T15:44:50.000Z</updated>
    <content type="html"><![CDATA[<p>css选择器内容繁多，整理便于理解<br><a id="more"></a></p>
<h2 id="1-_元素选择器">1. 元素选择器</h2><pre><code><span class="tag">h1</span><span class="rules">{}</span>
<span class="tag">p</span><span class="rules">{}</span>
</code></pre><h3 id="选择器分组">选择器分组</h3><pre><code>h1,p{}
<span class="bullet">* </span>通配符
</code></pre><h2 id="2-类选择器">2.类选择器</h2><pre><code><span class="class">.class</span>
结合元素选择器 <span class="tag">a</span><span class="class">.class</span>
多类选择器 <span class="class">.class1</span> <span class="class">.class2</span><span class="rules">{}</span>
</code></pre><h2 id="3-ID选择器">3.ID选择器</h2><pre><code><span class="preprocessor">#id</span>
</code></pre><h2 id="4-属性选择器">4.属性选择器</h2><p>[attribute]:用于选取带有指定属性的元素</p>
<pre><code><span class="comment">//把包含标题的所有元素变成蓝色</span>
<span class="attr_selector">[title]</span>{
    <span class="attribute">color</span>:blue
}
</code></pre><pre><code><span class="tag">a</span><span class="attr_selector">[title='w3school']</span><span class="rules">{
    <span class="rule"><span class="attribute">color</span>:<span class="value">red</span></span>;
}</span>
</code></pre><p>[attribute ~= value]: 根据部分属性值选择，如果需要根据属性值中的词列表的某个词进行选择（词与词之间用空格分开）则需要使用波浪号（～）</p>
<p>[attribute |= value]: 选取属性值等于value或以value-开头的所有元素</p>
<pre><code>*<span class="attr_selector">[title|='en']</span><span class="rules">{
    <span class="rule"><span class="attribute">color</span>:<span class="value">red</span></span>;
}</span>
</code></pre><p>css3新增属性选择器<br>    [att*=val]包含<br>    [att\^=val]开头<br>    [att\$=val]结尾</p>
<h2 id="5-后代选择器">5.后代选择器</h2><pre><code><span class="tag">p</span> <span class="tag">strong</span><span class="rules">{
    <span class="rule"><span class="attribute">color</span>:<span class="value">blue</span></span>;
}</span>
</code></pre><h2 id="6-子元素选择器">6.子元素选择器</h2><p>与后代选择器相比，只能选择作为某元素之元素的元素</p>
<pre><code><span class="tag">h1</span>&gt;<span class="tag">strong</span><span class="rules">{
    <span class="rule"><span class="attribute">color</span>:<span class="value">blue</span></span>;
}</span>
</code></pre><h2 id="7-相邻兄弟选择器">7.相邻兄弟选择器</h2><p>可选择紧接在另一个元素后的元素(自身没有选择)，且二者有相同的父元素</p>
<pre><code><span class="tag">h1</span>+<span class="tag">p</span><span class="rules">{}</span>;
</code></pre><h2 id="8-伪类">8.伪类</h2><h3 id="结构性伪类选择器（伪元素）（css3）">结构性伪类选择器（伪元素）（css3）</h3><pre><code><span class="comment">/*首行*/</span>
<span class="string">p:</span>first-line{
<span class="label">    color:</span>bule    
}
<span class="comment">/*首字母*/</span>
<span class="string">p:</span>first-letter{
<span class="label">    color:</span>blue
}
<span class="comment">/*before*/</span>
<span class="string">li:</span>before{
<span class="label">    content:</span><span class="string">"---"</span>
}
<span class="comment">/*after*/</span>
<span class="string">li:</span>after{
<span class="label">    content:</span><span class="string">"注释内容"</span>；
    font-<span class="string">size:</span><span class="number">12</span>px;
}
</code></pre><h3 id="root_not_empty_target">root not empty target</h3><p>在css3中，结构性伪类选择器的特点是允许开发者根据文档中的结构来指定元素的样式。</p>
<pre><code><span class="pseudo">:root</span><span class="rules">{
    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> darkgrey</span></span>;
    }</span>

<span class="tag">div</span> *<span class="pseudo">:not(h1)</span><span class="rules">{
    <span class="rule"><span class="attribute">color</span>:<span class="value">black</span></span>;
    }</span>

<span class="pseudo">:empty</span><span class="rules">{

    }</span>
<span class="pseudo">:target</span><span class="rules">{
    <span class="rule"><span class="attribute">background-color</span>:<span class="value">orange
    }</span></span></span>
</code></pre><h3 id="first-child、last-child、nth-child、nth-last-child">first-child、last-child、nth-child、nth-last-child</h3><p>针对一个父元素中的第一个子元素、最后一个子元素、指定序号的子元素</p>
<pre><code><span class="tag">li</span><span class="pseudo">:first-child</span>{<span class="attribute">backgroud-color</span>:;}
<span class="tag">li</span><span class="pseudo">:last-child</span>{}
<span class="tag">li</span><span class="pseudo">:nth-child</span>(n){}
<span class="tag">li</span><span class="pseudo">:nth-last-child</span>(n){}

<span class="comment">//奇数</span>
<span class="tag">li</span><span class="pseudo">:nth-child</span>(odd){}
<span class="comment">//偶数    </span>
<span class="tag">li</span><span class="pseudo">:nth-child</span>(even){}
</code></pre><h3 id=":nth-of-type和:nth-last-of-type"><code>:nth-of-type</code>和<code>:nth-last-of-type</code></h3><p><code>:only-child</code><br>只有一个子元素<br>可以使用only－child选择器来代替使用nth-child和 nth-last-child的实现方法</p>
<h3 id="UI元素状态伪类选择器">UI元素状态伪类选择器</h3><p>只有当元素处于某种状态下时才起作用，默认状态下不起作用。</p>
<p>(注意:必须以<span style="color: #ff0000;">L</span>o<span style="color: #ff0000;">v</span>e ,<span style="color: #ff0000;">Ha</span>的顺序来定义锚伪类)</p>
<pre><code>link、 hover、active、focus、disable、checked
enabled、disable
read-<span class="keyword">only</span>、<span class="keyword">default</span>、indeterminate、selection、invalid、valid、required、<span class="type">optional</span>、<span class="type">in</span>-<span class="built_in">range</span>、
</code></pre><h3 id="通用兄弟选择器">通用兄弟选择器</h3><p>同一个父元素之中的某元素之后的所有其他某个种类的兄弟元素所使用样式。</p>
<hr>
<p>参考：</p>
<ol>
<li>整理自极客学院视频</li>
<li>W3Cschool <a href="http://www.w3school.com.cn/cssref/css_selectors.asp" target="_blank" rel="external">CSS 选择器参考手册</a></li>
<li><a href="http://www.cnblogs.com/JustYong/p/5015643.html" target="_blank" rel="external">CSS选择器</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>css选择器内容繁多，整理便于理解<br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[Vim 基本操作]]></title>
    <link href="https://blog.lidong.me/2016/vim-basic/"/>
    <id>https://blog.lidong.me/2016/vim-basic/</id>
    <published>2016-01-03T14:22:20.000Z</published>
    <updated>2016-01-09T15:54:46.000Z</updated>
    <content type="html"><![CDATA[<p>vim编辑器的基本操作<br><a id="more"></a></p>
<h3 id="vim的三种模式">vim的三种模式</h3><p>1.命令模式（默认）<br>2.编辑模式<br>3.尾行模式<br><img src="/media/pic20160109235207ht77a.png" alt="pic20160109235207ht77a"></p>
<h3 id="切换为编辑模式的四种方式">切换为编辑模式的四种方式</h3><pre><code><span class="tag">a</span> 光标向后移动一位
<span class="tag">i</span> 当前位置
o 另起一新行
s 删除光标所在的字符
r 替换光标所在字符
</code></pre><h3 id="尾行模式：保存、查找">尾行模式：保存、查找</h3><pre><code>:q  //退出编辑器
:w  //保存修改内容
:wq  //保存并退出
:q!  //强制退出，当文本修改了，而不想保存
:w!  //强制保存，当没有文本写权限时

<span class="attribute">:set number 或:set</span> nu  //显示行号
<span class="attribute">:set nonumber 或 :set</span> nonu  //取消显示行号

:/内容/  或  /内容  //查找指定内容

:n //跳转到第几行
</code></pre><h3 id="命令模式">命令模式</h3><ol>
<li><p>光标移动</p>
<ul>
<li><p>字符级</p>
<p>左(h)  下(j)  上(k)  右(l)</p>
</li>
<li><p>单词级</p>
</li>
<li><p>行级</p>
<pre><code><span class="number">0</span>  <span class="comment">//行首</span>
$  <span class="comment">//行尾</span>
</code></pre></li>
<li><p>段落级</p>
</li>
<li>屏幕级</li>
<li>文档级</li>
</ul>
</li>
<li><p>内容删除</p>
<pre><code><span class="tag">dd</span>  <span class="comment">//删除光标当前行</span>
ndd  <span class="comment">//自当前删除n行</span>
cw  <span class="comment">//删除光标所在之母后面的字符</span>
</code></pre></li>
<li><p>内容复制</p>
<pre><code>yy  <span class="comment">//复制光标当前行</span>
nyy <span class="comment">//自当前行复制n行</span>
<span class="tag">p</span>  <span class="comment">//对（删除）复制的内容进行粘贴</span>
</code></pre></li>
<li><p>相关快捷操作</p>
<pre><code><span class="keyword">u</span>  <span class="comment">//撤销</span>
</code></pre></li>
</ol>
<p>参考：</p>
<ol>
<li><a href="http://www.cnblogs.com/dengmj/p/5031498.html" target="_blank" rel="external">Linux之vi三种模式常用操作的学习</a></li>
</ol>
]]></content>
    <summary type="html">
    <![CDATA[<p>vim编辑器的基本操作<br>]]>
    
    </summary>
    
      <category term="Vim" scheme="https://blog.lidong.me/tags/Vim/"/>
    
      <category term="基本操作" scheme="https://blog.lidong.me/tags/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[《JavaScript权威指南》读书笔记1]]></title>
    <link href="https://blog.lidong.me/2016/javascript-guide-1/"/>
    <id>https://blog.lidong.me/2016/javascript-guide-1/</id>
    <published>2016-01-02T15:22:20.000Z</published>
    <updated>2016-01-08T17:11:17.000Z</updated>
    <content type="html"><![CDATA[<p>学了好久WEB，只因为没有认真学习JavaScript，做不出完整效果来，现在要认真看书记笔记了<br><a id="more"></a><br><img src="/media/s8958854.jpg" alt="JavaScript权威指南"></p>
<h2 id="词法结构">词法结构</h2><p>当函数赋值给对象的属性，我们称为“方法”</p>
<p>按照惯例，构造函数均以大写字母开始</p>
<p>JavaScript是区分大小写的语言</p>
<p>JavaScript会忽略程序中标示之间的空格。多数情况下，JavaScript同样会忽略换行符（可选分号情形）</p>
<p>JavaScript支持两种格式的注释：</p>
<pre><code><span class="comment">//单行注释 </span>

<span class="comment">/*
多行注释内容
*/</span>
</code></pre><p>（1）javascript保留字</p>
<ul>
<li>if分支语句：if, else</li>
<li>switch分支语句：switch, case, default, break</li>
<li>循环语句：do, while, for, continue</li>
<li>异常处理语句：try, catch, finally, throw</li>
<li>获取类型：typeof, instanceof</li>
<li>布尔值：true, false, null</li>
<li>函数相关：var, void, function, return</li>
<li>其他：in, this, with, new, delete</li>
</ul>
<p>（2）ECMA扩展保留的关键字</p>
<ul>
<li>基本数据类型：byte, char, boolean, int, short, long, float, double, enum</li>
<li>继承：implements, extends, super</li>
<li>类与接口：class, interface</li>
<li>用来修饰函数的关键字：abstract, native, static, final, const, volatile, synchronized</li>
<li>导入导出：export, import</li>
<li>访问权限：private, protected, public</li>
<li>其他：goto, package, throws, transient, debugger</li>
</ul>
<p>（3）javascript预定义的全局变量名或函数名</p>
<ul>
<li>数据类型：Number, Boolean, String, undefined, Object, Array, Function, Date, Math, RegExp, Error</li>
<li>错误类型：EvalError, RangeError, ReferenceError, SyntaxError, TypeError, URIError</li>
<li>编码：decodeURI, decodeURIComponent, encodeURI</li>
<li>转义：escape, unescape</li>
<li>类型转换：parentInt, parentFloat</li>
<li>特殊值及判断：isFinite, isNaN, NaN, Infinity</li>
<li>其他：arguments, eval</li>
</ul>
<h2 id="类型、值和变量">类型、值和变量</h2><p>在JavaScript中，字符串是不可变的，可以访问字符串任意位置的文本，但JavaScript并没有提供修改已知字符串的文本内容的方法。</p>
<h3 id="数字">数字</h3><p>JavaScript中算术运算在溢出、下溢、被零整除时不会报错。<br>零除以零是没有意义的</p>
<p>数字中的特殊值：</p>
<ul>
<li>Infinity：表示无穷大的特殊值</li>
<li>NaN：特殊的非数字值（产生未定义的结果或错误时出现，如除0）</li>
<li>Number.MAX_VALUE：可表示的最大数字</li>
<li>Number.MIN_VALUE：可表示的最小数字（与0最接近的数字）</li>
<li>Number.NaN：特殊的非数字值</li>
<li>Number.POSITIVE_INFINITY：表示正无穷大的特殊值</li>
<li>Number.NEGATIVE_INFINITY：表示负无穷大的特殊值</li>
</ul>
<p>注意：NaN和任何数值都不相等，包括它自己在内，因此需要用isNaN()来检测。isFinite()用来检测一个数字是否是NaN、正无穷大或负无穷大。</p>
<h3 id="文本">文本</h3><p>由单引号定界的字符串中可以包含双引号，由双引号定界的字符串中也可以包含单引号。</p>
<p>字符串可调用的方法</p>
<pre><code><span class="tag">var</span> s =<span class="string">"Hello,World"</span>  <span class="comment">//定义一个字符串</span>
s<span class="class">.length</span>  <span class="comment">// =&gt; "11"  </span>
s.<span class="function"><span class="title">chaAt</span><span class="params">(<span class="number">0</span>)</span></span>  <span class="comment">// =&gt; "H": 第一个字符</span>
s.<span class="function"><span class="title">charAt</span><span class="params">(s.length-<span class="number">1</span>)</span></span>  <span class="comment">//  =&gt; "d" :最后一个字符</span>
s.<span class="function"><span class="title">substring</span><span class="params">(<span class="number">1</span>,<span class="number">4</span>)</span></span>  <span class="comment">//  =&gt; "ell" :第2-4个字符</span>
s.<span class="function"><span class="title">slice</span><span class="params">(<span class="number">1</span>,<span class="number">4</span>)</span></span>  <span class="comment">//  =&gt; "ell" :同上</span>
s.<span class="function"><span class="title">slice</span><span class="params">(-<span class="number">3</span>)</span></span>  <span class="comment">//  =&gt; "rld" :最后三个字符</span>
s.<span class="function"><span class="title">indexOf</span><span class="params">(<span class="string">"l"</span>)</span></span>  <span class="comment">//  =&gt; "2" :字符l首次出现的位置</span>
s.<span class="function"><span class="title">lastIndexOf</span><span class="params">(<span class="string">"l"</span>)</span></span>  <span class="comment">//  =&gt; "10" : 字符l最后一次出现的位置</span>
s.<span class="function"><span class="title">indexOf</span><span class="params">(<span class="string">"l"</span>,<span class="number">3</span>)</span></span>  <span class="comment">//  =&gt; 3 :在位置3及以后首次出现l的位置</span>
s.<span class="function"><span class="title">split</span><span class="params">(<span class="string">","</span>)</span></span>  <span class="comment">//  =&gt; ["Hello","World"] : 分割成字串</span>
s.<span class="function"><span class="title">replace</span><span class="params">(<span class="string">"H"</span>,<span class="string">"h"</span>)</span></span>  <span class="comment">//  =&gt; "hello,World" :全文字符替换</span>
s.<span class="function"><span class="title">toUpperCase</span><span class="params">()</span></span>  <span class="comment">//  =&gt; "HELLO,WORLD" :大写</span>
</code></pre>]]></content>
    <summary type="html">
    <![CDATA[<p>学了好久WEB，只因为没有认真学习JavaScript，做不出完整效果来，现在要认真看书记笔记了<br>]]>
    
    </summary>
    
      <category term="JavaScript" scheme="https://blog.lidong.me/tags/JavaScript/"/>
    
      <category term="读书笔记" scheme="https://blog.lidong.me/tags/%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Git 命令基本操作]]></title>
    <link href="https://blog.lidong.me/2016/git-basic/"/>
    <id>https://blog.lidong.me/2016/git-basic/</id>
    <published>2016-01-02T14:21:15.000Z</published>
    <updated>2016-01-10T08:07:59.000Z</updated>
    <content type="html"><![CDATA[<p>日常使用只要记住下图6个命令，就可以了<br><img src="/media/bg2015120901.png" alt="bg2015120901"><br>图来自：<a href="http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html" target="_blank" rel="external">http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html</a></p>
<h2 id="zui常用的命令">zui常用的命令</h2><h2 id="新建代码库">新建代码库</h2><pre><code><span class="comment">//在当前目录新建一个git代码库</span>
git init

新建一个目录，并将其初始化为git代码库
git init <span class="attr_selector">[project－name]</span>

下载一个项目和它的整个代码历史
git clone <span class="attr_selector">[url]</span>
</code></pre><h2 id="配置">配置</h2><p>git的配置文件为<code>.gitconfig</code>,它可以在用户目录下（全局配置），也可以在项目目录下（项目配置）。</p>
<pre><code>显示当前的<span class="tag">git</span>配置
<span class="tag">git</span> <span class="tag">config</span> <span class="tag">--list</span>    

编辑<span class="tag">git</span>配置文件
<span class="tag">git</span> <span class="tag">config</span> <span class="tag">-e</span> <span class="attr_selector">[--global]</span>

设置提交代码时的用户信息
<span class="tag">git</span> <span class="tag">config</span> <span class="attr_selector">[--global]</span> <span class="tag">user</span><span class="class">.name</span> "<span class="attr_selector">[name]</span>"
<span class="tag">git</span> <span class="tag">cinfig</span> <span class="attr_selector">[--gloabl]</span> <span class="tag">user</span><span class="class">.email</span> "<span class="attr_selector">[email address]</span>"
</code></pre><h2 id="增加/删除文件">增加/删除文件</h2><pre><code>添加指定文件到暂存区
<span class="atom">git</span> <span class="atom">add</span> [<span class="atom">file1</span>] [<span class="atom">file2</span>] ..

添加指定目录到暂存区，包括子目录
<span class="atom">git</span> <span class="atom">add</span> [<span class="atom">dir</span>]

添加当前目录的所有文件到暂存区
<span class="atom">git</span> <span class="atom">add</span>

删除工作区文件，并且将这次删除放入暂存区
<span class="atom">git</span> <span class="atom">rm</span> [<span class="atom">file1</span>] [<span class="atom">file2</span>]

停止追踪指定文件，但该文件会保留在工作区
<span class="atom">git</span> <span class="atom">rm</span> --<span class="atom">cached</span> [<span class="atom">file</span>]

该名文件，并且将这个改名放入暂存区
<span class="atom">git</span> <span class="atom">mv</span> [<span class="atom">file</span>-<span class="atom">original</span>] [<span class="atom">file</span>-<span class="atom">renamed</span>]
</code></pre><h2 id="代码提交">代码提交</h2><pre><code>提交暂存区到仓库区
git <span class="operator"><span class="keyword">commit</span> -<span class="keyword">m</span> [message]

提交暂存区的指定文件到仓库
git <span class="keyword">commit</span> [file1] [file2] ... -<span class="keyword">m</span> [message]

提交工作区自上次<span class="keyword">commit</span>之后的变化，直接到仓库区
git <span class="keyword">commit</span> -a

提交时现实所有diff信息
gitcommit -v

使用一次新的<span class="keyword">commit</span>， 替代上一次的提交
如果代码没有任何变化，则用了改写上一次的commmit的提交信息
git <span class="keyword">commit</span> <span class="comment">--amend -m [message]</span>

git <span class="keyword">commit</span> <span class="comment">-- amend [file1] [file2] ...</span></span>
</code></pre><h2 id="分支">分支</h2><pre><code>列出所有本地分支
<span class="label">git</span> <span class="keyword">branch
</span>
列出所有远程分支
<span class="label">git</span> <span class="keyword">branch </span>-r

列出所有本地分支和远程分支
<span class="label">git</span> <span class="keyword">branch </span>-a

新建一个分支，但依然停留在当前分支
<span class="label">git</span> <span class="keyword">branch </span>[<span class="keyword">branch-name]
</span>
新建一个分支，并切换到该分支
<span class="label">git</span> <span class="keyword">branch </span>-<span class="keyword">b </span>[<span class="keyword">branch-name]
</span>

切换到指定分支，并更新工作区
<span class="label">git</span> checkout [<span class="keyword">branch-name]
</span>
建立追踪关系，在现有分支与指定的远程分支之间
[]

合并指定分支到当前分支
<span class="label">git</span> merge [<span class="keyword">branch]
</span>
选择一个commit,合并到当前分支
<span class="label">git</span> cherry-pick[commit]

删除分支
<span class="label">git</span> <span class="keyword">branch </span>-d [<span class="keyword">branch-name]
</span>
删除远程分支
<span class="label">git</span> <span class="keyword">push </span>origin --delete[<span class="keyword">branch-name]
</span><span class="label">git</span> <span class="keyword">branch </span>-dr [remote/<span class="keyword">branch]</span>
</code></pre><h2 id="标签">标签</h2><pre><code>列出所有<span class="keyword">tag</span>
git <span class="keyword">tag</span>

新建一个<span class="keyword">tag</span>在当前commit
git <span class="keyword">tag</span> [<span class="keyword">tag</span>]

新建一个<span class="keyword">tag</span>在指定commit
git <span class="keyword">tag</span> [<span class="keyword">tag</span>] [commit]

删除本地<span class="keyword">tag</span>
git <span class="keyword">tag</span> -<span class="keyword">d</span> [<span class="keyword">tag</span>]

删除远程<span class="keyword">tag</span>
git <span class="keyword">tag</span> －<span class="keyword">d</span> [<span class="keyword">tag</span>]

查看<span class="keyword">tag</span>信息
git show [<span class="keyword">tag</span>]

提交指定<span class="keyword">tag</span>
git push [remote][<span class="keyword">tag</span>]

提交所有<span class="keyword">tag</span>
git push [remote] --<span class="keyword">tags</span>

新建一个分支，指向某个<span class="keyword">tag</span>
git checkout -<span class="keyword">b</span> [branch] [<span class="keyword">tag</span>]
</code></pre><h2 id="查看信息">查看信息</h2><pre><code>显示有变更的文件
git status

显示当前分支的版本历史
git log

显示<span class="operator"><span class="keyword">commit</span>历史，以及每次<span class="keyword">commit</span>发生变更的文件
git <span class="keyword">log</span> <span class="comment">--stat</span>

[]

显示某个文件的版本历史，包括文件改名
git <span class="keyword">log</span> <span class="comment">--follow [file]</span>
git whatchanged [<span class="keyword">file</span>]

显示指定文件相关的每一次diff
git <span class="keyword">log</span> -<span class="keyword">p</span> [<span class="keyword">file</span>]

显示指定文件是什么人在什么时间修改过
git blame [<span class="keyword">file</span>]

显示暂存区和工作区的差异
git diff

[]</span>
</code></pre><h2 id="远程同步">远程同步</h2><pre><code>下载远程仓库的所有变动
git fetch <span class="string">[remote]</span>

显示所有远程仓库
git remote -v

显示某个远程仓库的信息
git remote show <span class="string">[remote]</span>

增加一个新的远程仓库，并命名
git remote add <span class="string">[shortname]</span> <span class="string">[url]</span>

取回远程仓库的变化，并与本地分支合并
git pull <span class="string">[remote]</span> <span class="string">[branch]</span>

上传本地指定分支到远程仓库
git push <span class="string">[remote]</span> <span class="string">[branch]</span>

强行推送当前分支到远程仓库，即使有冲突
git push <span class="string">[remote]</span> <span class="string">[branch]</span>

推送所有分支到远程仓库
git push <span class="string">[remote]</span> --all
</code></pre><h2 id="撤销">撤销</h2><pre><code>恢复暂存区的指定文件到工作区
git checkout [file]

恢复某个<span class="operator"><span class="keyword">commit</span>的指定文件到工作区
git checkout [<span class="keyword">commit</span>] [<span class="keyword">file</span>]

恢复上一个<span class="keyword">commit</span>的所有文件到工作区
git checkout

重置暂存区的指定文件，与上一次<span class="keyword">commit</span>保存一致，但工作区不变
git <span class="keyword">reset</span> [<span class="keyword">file</span>]

重置暂存区与工作区，与上一次<span class="keyword">commit</span>保持一致
git <span class="keyword">reset</span> <span class="comment">--hard</span>

重置当前分支的指针为指定<span class="keyword">commit</span>，同时重置暂存区和文件区，但工作区不变
git <span class="keyword">reset</span> [<span class="keyword">commit</span>]

重置当前分支的<span class="keyword">HEAD</span>为指定<span class="keyword">commit</span>，同时重置暂存区和工作区，与指定<span class="keyword">commit</span>一致
git <span class="keyword">reset</span> <span class="comment">--hard [commit]</span>

重置当前<span class="keyword">HEAD</span>为指定<span class="keyword">commit</span>，但保持暂存区和工作区不变
git <span class="keyword">reset</span> <span class="comment">--keep [commit]</span>

新建一个<span class="keyword">commit</span>，用了撤销指定<span class="keyword">commit</span>
后者的所有变化都将被前者抵消，并且应用到当前分支
git revert [<span class="keyword">commit</span>]</span>
</code></pre><h2 id="其他">其他</h2><pre><code>生成一个可供发布的压缩包
git archive
</code></pre><p>####参考：<br>1.<a href="http://www.ruanyifeng.com/blog/2015/12/git-cheat-sheet.html" target="_blank" rel="external">常用 Git 命令清单</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>日常使用只要记住下图6个命令，就可以了<br><img src="/media/bg2015120901.png" alt="bg2015120901"><br>图来自：<a href="http://www.ruanyifeng.com/blog/2015/12/git-]]>
    </summary>
    
      <category term="git" scheme="https://blog.lidong.me/tags/git/"/>
    
      <category term="基本操作" scheme="https://blog.lidong.me/tags/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[MYSQL 命令行基本操作]]></title>
    <link href="https://blog.lidong.me/2016/mysql-basic/"/>
    <id>https://blog.lidong.me/2016/mysql-basic/</id>
    <published>2016-01-01T14:10:00.000Z</published>
    <updated>2016-01-03T14:47:53.000Z</updated>
    <content type="html"><![CDATA[<p>mysql命令行的基本操作命令<br> <a id="more"></a></p>
<h2 id="登录">登录</h2><pre><code>mysql -<span class="keyword">u</span> root -p/mysql-<span class="keyword">h</span> localhost -<span class="keyword">u</span> root -p databasrName;
</code></pre><h2 id="数据库操作">数据库操作</h2><pre><code>显示所有数据库
<span class="operator"><span class="keyword">show</span> <span class="keyword">databases</span>；

选定某个数据库
<span class="keyword">use</span> 数据库名;</span>

创建数据库
<span class="operator"><span class="keyword">create</span> <span class="keyword">database</span> 数据库名;</span>

删除数据库
<span class="operator"><span class="keyword">drop</span> <span class="keyword">database</span> 数据库名;</span>

查询数据库版本
<span class="operator"><span class="keyword">select</span> <span class="keyword">version</span>;</span>

查询当前选定的数据库
<span class="operator"><span class="keyword">select</span> <span class="keyword">database</span>();</span>
</code></pre><h2 id="表操作">表操作</h2><pre><code>创建表
<span class="operator"><span class="keyword">create</span> <span class="keyword">table</span> 表名；

删除表
<span class="keyword">drop</span> <span class="keyword">table</span> 表名;</span>

清空表
<span class="operator"><span class="keyword">delete</span> <span class="keyword">table</span> 表名;</span>

查看表内容
<span class="operator"><span class="keyword">select</span> * <span class="keyword">from</span> 表名;</span>

查看表结构
<span class="operator"><span class="keyword">describe</span> 表名;</span>

修改表内容
<span class="operator"><span class="keyword">update</span>表名<span class="keyword">set</span> 参数名要改成的值<span class="keyword">where</span>参数名＝某个值;</span>
</code></pre><h2 id="用户操作">用户操作</h2><pre><code>创建用户
<span class="operator"><span class="keyword">grant</span> 权限 <span class="keyword">on</span> 数据库名.* <span class="keyword">to</span> 用户名@登录主机 <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">"密码"</span>;</span>

用户已存在赋予权限
<span class="operator"><span class="keyword">grant</span> <span class="keyword">select</span>, indert,<span class="keyword">update</span>,<span class="keyword">delete</span> <span class="keyword">on</span> 数据库.* <span class="keyword">to</span> 用户名@登录主机 <span class="keyword">identified</span> <span class="keyword">by</span> <span class="string">"密码"</span>；

权限有<span class="number">14</span>种
<span class="keyword">select</span>,<span class="keyword">insert</span>,<span class="keyword">update</span>,<span class="keyword">create</span>,<span class="keyword">drop</span>,<span class="keyword">index</span>,altergrant,<span class="keyword">references</span>,reload,<span class="keyword">shutdown</span>,process

删除用户
<span class="keyword">drop</span> <span class="keyword">user</span> 用户名;</span>

查询所有用户
<span class="operator"><span class="keyword">select</span> <span class="keyword">user</span> <span class="keyword">from</span> mysql.<span class="keyword">user</span>

查看当前用户
<span class="keyword">select</span> <span class="keyword">user</span>();</span>
</code></pre><h2 id="其它">其它</h2><pre><code>查看存储过程
show <span class="function"><span class="keyword">procedure</span> <span class="title">status</span>;</span>

查看存储的具体内容
show <span class="keyword">create</span> <span class="function"><span class="keyword">procedure</span> 存储过程名;</span>
查询时间
<span class="keyword">select</span> now();
</code></pre><p>参考：<br><a href="http://www.cnblogs.com/JAYIT/p/5016688.html" target="_blank" rel="external">http://www.cnblogs.com/JAYIT/p/5016688.html</a><br><a href="http://blog.csdn.net/wangbofei/article/details/11357181" target="_blank" rel="external">http://blog.csdn.net/wangbofei/article/details/11357181</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>mysql命令行的基本操作命令<br>]]>
    
    </summary>
    
      <category term="mysql" scheme="https://blog.lidong.me/tags/mysql/"/>
    
      <category term="基本操作" scheme="https://blog.lidong.me/tags/%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CentOS7.0编译安装nginx1.9.8、php5.6(php-fpm)]]></title>
    <link href="https://blog.lidong.me/2015/centos7-nginx-php-mysql/"/>
    <id>https://blog.lidong.me/2015/centos7-nginx-php-mysql/</id>
    <published>2015-12-09T10:44:32.000Z</published>
    <updated>2016-01-03T16:50:32.000Z</updated>
    <content type="html"><![CDATA[<p>折腾好久，终于完整的整理了Nginx＋PHP的安装<br>安装顺序最好是先安装PHP，再安装Nginx<br><a id="more"></a></p>
<h2 id="1-安装php">1.安装php</h2><p><code>wget http://cn2.php.net/distributions/php-5.6.16.tar.gz</code><br><code>tar -xvf php-5.6.16.tar.gz</code><br><code>cd php-5.6.16/</code></p>
<p><code>./configure --prefix=/usr/local/php  --enable-inline-optimization --disable-debug --disable-rpath --enable-shared --enable-opcache --enable-fpm --with-fpm-user=www --with-fpm-group=www --with-mysql=mysqlnd --with-mysqli=mysqlnd --with-pdo-mysql=mysqlnd --with-gettext --enable-mbstring --with-iconv --with-mcrypt --with-mhash --with-openssl --enable-bcmath --enable-soap --with-libxml-dir --enable-pcntl --enable-shmop --enable-sysvmsg --enable-sysvsem --enable-sysvshm --enable-sockets --with-curl --with-zlib --enable-zip --with-bz2 --with-readline --without-sqlite3 --without-pdo-sqlite --with-pear</code></p>
<p><code>make</code><br><code>sudo make install</code></p>
<p>安装完成的截图</p>
<p><img src="https://dn-blogme.qbox.me/15-12-14/62005590.jpg" alt="安装完成"></p>
<p>设置php-fpm配置文件<br><code>cp /usr/local/php/etc/php-fpm.conf.default /usr/local/php/etc/php-fpm.conf</code></p>
<p>启动php-fpm<br><code>sudo /usr/local/php/sbin/php-fpm</code></p>
<h3 id="编译过程可能出现的报错情况">编译过程可能出现的报错情况</h3><p>configure: error: xml2-config not found. Please check your libxml2 installation.<br><code>sudo yum install -y libxml2-devel</code></p>
<p>configure: error: Cannot find OpenSSL’s <evp.h><br><code>sudo yum install -y openssl-devel</code></evp.h></p>
<p>configure: error: Please reinstall the BZip2 distribution<br><code>sudo yum install -y bzip2-devel</code></p>
<p>configure: error: Please reinstall the libcurl distribution -<br>    easy.h should be in <curl-dir>/include/curl/<br><code>sudo yum install -y libcurl-devel</code></curl-dir></p>
<p>configure: error: mcrypt.h not found. Please reinstall libmcrypt.<br>libmcrypt在官方yum源中没有，需要手动编译安装可以到sourceforge下载<br><a href="http://sourceforge.net/projects/mcrypt/files/Libmcrypt/" target="_blank" rel="external">http://sourceforge.net/projects/mcrypt/files/Libmcrypt/</a><br><code>wget http://downloads.sourceforge.net/project/mcrypt/Libmcrypt/2.5.8/libmcrypt-2.5.8.tar.gz</code><br><code>tar -xvf libmcrypypt-2.5.8.tar.gz</code><br><code>./configure</code><br><code>make</code><br><code>sudo make install</code></p>
<p>configure: error: Don’t know how to define struct flock on this system, set –enable-opcache=no<br>编辑 /etc/ld.so.conf.d/local.conf文件，加入/usr/local/lib内容<br><code>sudo vi /etc/ld.so.conf.d/local.conf</code><br><code>/usr/local/lib</code><br><code>sudo ldconfig</code></p>
<p>configure: error: Please reinstall readline - I cannot find readline.h<br><code>sudo yum install -y readline-devel</code></p>
<p>PS：一次全部安装上述依赖<br><code>sudo yum install -y libxml2-devel openssl-devel bzip2-devel libcurl-devel readline-devel</code></p>
<h2 id="2-安装nginx">2.安装nginx</h2><p><code>wget http://nginx.org/download/nginx-1.9.8.tar.gz</code><br>解压<br><code>tar -xvf nginx-1.9.8.tar.gz</code><br><code>cd nginx-1.9.8.tar.gz</code><br><code>./configure</code><br><code>make</code><br><code>sudo make install</code></p>
<p>修改配置文件以支持php-fpm<br><code>sudo  vi /usr/local/nginx/conf/nginx.conf</code></p>
<p>其中server段增加如下配置，注意标红内容配置，否则会出现No input file specified.错误</p>
<pre><code><span class="title">location</span> <span class="regexp">~ \.php$</span> {
        <span class="title">root</span>           html;
        <span class="title">fastcgi_pass</span>   <span class="number">127.0.0.1:9000</span>;
        <span class="title">fastcgi_index</span>  index.php;
        <span class="comment">#修改下面字段，否则会出现No input file specified.错误</span>
        <span class="title">fastcgi_param</span>  SCRIPT_FILENAME    <span class="variable">$document_root</span><span class="variable">$fastcgi_script_name</span>;
        <span class="title">include</span>        fastcgi_params;
    }
</code></pre><p>启动nginx<br><code>sudo /usr/local/nginx/sbin/nginx</code></p>
<p>PS：这里是nginx编译完成的信息图，在这里可以看到nginx的路径，配置文件位置及其它一些有用信息<br><img src="https://dn-blogme.qbox.me/15-12-14/7981235.jpg" alt="编译完成"></p>
<h3 id="编译过程可能出现的报错情况-1">编译过程可能出现的报错情况</h3><p>./configure: error: the HTTP rewrite module requires the PCRE library.</p>
<p><code>sudo yum -y install pcre-devel</code></p>
<p>./configure: error: the HTTP gzip module requires the zlib library.</p>
<p><code>sudo yum -y install zlib-devel</code></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>折腾好久，终于完整的整理了Nginx＋PHP的安装<br>安装顺序最好是先安装PHP，再安装Nginx<br>]]>
    
    </summary>
    
      <category term="centos" scheme="https://blog.lidong.me/tags/centos/"/>
    
      <category term="nginx" scheme="https://blog.lidong.me/tags/nginx/"/>
    
      <category term="php" scheme="https://blog.lidong.me/tags/php/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[改换linode主机]]></title>
    <link href="https://blog.lidong.me/2015/linode/"/>
    <id>https://blog.lidong.me/2015/linode/</id>
    <published>2015-12-01T03:47:25.000Z</published>
    <updated>2015-12-02T05:47:02.000Z</updated>
    <content type="html"><![CDATA[<p>之前购买了digitalocean，先是选Singapore节点，感觉速度不太理想，后来<a href="https://blog.lidong.me/2015/digitalocean-transfer/">换成San Francisco节点</a>，稍稍好一点了，可是好景不长，现在不知道最近是又有什么新政策要出台，到SFO的网络丢包丢的厉害<br><a id="more"></a><br><img src="/static/uploads/2015/12/sfo-digitalocean-ping.png" alt=""></p>
<p>其它DQ节点网络就更渣了。不得不感叹我大GFW！网络不通那可是万万不可啊。于是只能上高大上的linode了。一个月10刀啊。</p>
<p>购买了linode时，只是一股脑的想着去买了，用的很早以前注册的linode帐号，一直没有用。后来发现黑色星期五，linode送25刀。我了个去，只针对新用户，我也是新用户好吗！！第一次购买！白白丢了25刀，💔心好痛.因为要绑定信用卡，忍痛不去注册新账号了。</p>
<p>如果你要购买linode主机，使用我的<a href="https://www.linode.com/?r=6169f1024c811c3a477843efc2cb619f8df4dcd5" target="_blank" rel="external">linode推荐链接</a>，你也可以有10刀的现金券。安抚一下我受伤的心！感谢！</p>
<p>购买linode的选择的是东京节点，速度很不错，下载可以跑满我的10Mb宽带，ping值在100左右</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>之前购买了digitalocean，先是选Singapore节点，感觉速度不太理想，后来<a href="https://blog.lidong.me/2015/digitalocean-transfer/">换成San Francisco节点</a>，稍稍好一点了，可是好景不长，现在不知道最近是又有什么新政策要出台，到SFO的网络丢包丢的厉害<br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[尝试使用wiki来整理分享]]></title>
    <link href="https://blog.lidong.me/2015/dokuwiki/"/>
    <id>https://blog.lidong.me/2015/dokuwiki/</id>
    <published>2015-11-24T04:12:46.000Z</published>
    <updated>2015-11-24T18:29:22.000Z</updated>
    <content type="html"><![CDATA[<p>学习的东西，东一下，西一下，说起来感觉什么都会，但是真正做起来又不知道怎么做。学习过的有的有记录了，有的没有记录了，记录了的又到处都是，keep，Evernote，RSS…散落各处。我又比较收藏，但是收藏了没有整理消化。现在尝试用wiki整理一下吧。<br><a id="more"></a><br>先后尝试比较了 <a href="http://doonoo.tiddlyspot.com/#about" target="_blank" rel="external">TiddlyWiki</a> ，MediaWiki 和 dokuwiki。</p>
<h3 id="TiddlyWiki">TiddlyWiki</h3><p>简单，只有一个文件的wiki，只有一个文件，势必会很大，在试用了几天后发现这个文件达到2MB左右。每次打开、保存就要传送这个2MB文件，不能忍。</p>
<h3 id="MediaWiki">MediaWiki</h3><p>维基百科出品，名声大，用户权限管理不适合个人使用。</p>
<h3 id="dokuwiki">dokuwiki</h3><p>不需要数据库，PHP运行环境即可，编写的wiki页面，实际是以txt文件保存着，感觉不错，就选择了dokuwiki了。</p>
<p>下载安装参考官方文档: <a href="https://www.dokuwiki.org/start?id=zh:install" target="_blank" rel="external">https://www.dokuwiki.org/start?id=zh:install</a></p>
<p>查看我的 wiki：<a href="http://wiki.lidong.me" target="_blank" rel="external">http://wiki.lidong.me</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>学习的东西，东一下，西一下，说起来感觉什么都会，但是真正做起来又不知道怎么做。学习过的有的有记录了，有的没有记录了，记录了的又到处都是，keep，Evernote，RSS…散落各处。我又比较收藏，但是收藏了没有整理消化。现在尝试用wiki整理一下吧。<br>]]>
    
    </summary>
    
      <category term="wiki" scheme="https://blog.lidong.me/tags/wiki/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Rsync部署HEXO，使用HTTPS，附加HTTP2]]></title>
    <link href="https://blog.lidong.me/2015/https/"/>
    <id>https://blog.lidong.me/2015/https/</id>
    <published>2015-11-14T02:36:54.000Z</published>
    <updated>2015-11-23T01:05:17.000Z</updated>
    <content type="html"><![CDATA[<p>首先如果想部署在GITHUB上使用HTTPS，就目前来看那是不可能，除非使用github.io域名，所以首先要有一个VPS或云主机，之前做SS时，在digitalocean买了一个水滴，使用也不算多我的BLOG访问量也不高，为了省钱就一起搞吧，也是为了充分利用资源吧  O(∩_∩)O</p>
<p>我的digitalocean推荐链接：使用我的链接，你将有10美元奖励，我也有额外获得。 <a id="more"></a><br><a href="https://www.digitalocean.com/?refcode=7c320d50fe04" target="_blank" rel="external">https://www.digitalocean.com/?refcode=7c320d50fe04</a></p>
<h3 id="下载nginx">下载nginx</h3><pre><code>cd ~/tmp/
wget http:<span class="comment">//nginx.org/download/nginx-1.9.6.tar.gz</span>
wget https:<span class="comment">//www.openssl.org/source/openssl-1.0.2d.tar.gz</span>

tar -xzf nginx-<span class="number">1.9</span>.<span class="number">6</span><span class="class">.tar</span><span class="class">.gz</span>
tar -xzf openssl-<span class="number">1.0</span>.<span class="number">2</span>d<span class="class">.tar</span><span class="class">.gz</span>
</code></pre><h3 id="编译安装">编译安装</h3><pre><code>cd nginx-<span class="number">1.9</span>.<span class="number">6</span>
./configure --<span class="keyword">with</span>-openssl=<span class="regexp">/home/dong</span><span class="regexp">/tmp/openssl</span>-<span class="number">1.0</span>.<span class="number">2</span>d/ --<span class="keyword">with</span>-http_spdy_module --<span class="keyword">with</span>-http_ssl_module
make
sudo make install
</code></pre><p>使用 <code>--with-openssl</code>指定openssl文件位置</p>
<h3 id="编辑nginx配置文件">编辑nginx配置文件</h3><p> <code>vi /usr/local/nginx/conf/nginx.conf</code></p>
<pre><code><span class="comment"># HTTPS server     </span>
<span class="title">server</span> {
<span class="comment">#   此处添加HTTP2 即可启用HTTP2</span>
    <span class="title">listen</span>       <span class="number">443</span> ssl http2;
    <span class="title">server_name</span>  localhost;
    <span class="comment"># 证书文件路径</span>
    <span class="comment"># 证书私钥文件路径</span>
    <span class="title">ssl_certificate</span>      ./ssl/cert.pem;
    <span class="title">ssl_certificate_key</span>  ./ssl/cert.key;

<span class="comment">#   ssl_session_cache    shared:SSL:1m;</span>
    <span class="title">ssl_session_timeout</span>  <span class="number">5m</span>;

<span class="comment">#    ssl_ciphers  HIGH:!aNULL:!MD5;</span>
<span class="comment">#    ssl_prefer_server_ciphers  on;</span>
<span class="comment">#    location / {</span>
<span class="comment"># 在root后面位网站的根目录</span>
        <span class="title">root</span>   /home/wwwroot/blog/; 
        <span class="title">index</span>  index.html index.htm;
    }
 <span class="comment"># }</span>
</code></pre><p>编译安装的直接去掉配置文件中相应条目的注释就好了，如果是使用yum或apt-get自动安装的，可能需要手工添加</p>
<h3 id="重载nginx">重载nginx</h3><pre><code><span class="regexp">/usr/</span>local<span class="regexp">/nginx/</span>sbin/nginx -t
<span class="regexp">/usr/</span>local<span class="regexp">/nginx/</span>sbin/nginx -s reload
</code></pre><p>  使用 <code>-t</code>参数检查配置文件的正确性，避免配置文件出错nginx停止</p>
<p>不仅使用了HTTPS，还是使用HTTP2。瞎折腾 -_-|||</p>
<h3 id="rsync部署hexo">rsync部署hexo</h3><p>我选择的是rsync模式，服务器上需要安装有rsync，一般linux中都安装了rsync，命令<code>rsync --version</code>确定是否安装，若没有安装，<code>yum install rsync</code>或 <code>apt-get install rsync</code>安装就好啦。</p>
<p>安装hexo-deployer-rsync<br>npm install hexo-deployer-rsync –save</p>
<h4 id="修改配置">修改配置</h4><p>修改hexo的主配置文件<code>_config.yml</code></p>
<pre><code><span class="attribute">deploy</span>:
- <span class="attribute">type</span>: rsync
  <span class="attribute">host</span>: 主机地址(填你主机的ip)
  <span class="attribute">user</span>: lidong（主机登陆用户名）
  <span class="attribute">root</span>: /home/wwwroot/blog/
  <span class="attribute">port</span>: <span class="number">22</span>
  <span class="attribute">delete</span>: true
  <span class="attribute">verbose</span>: true
  <span class="attribute">ignore_errors</span>: [true|false] 
- <span class="attribute">type</span>: git
   <span class="attribute">repo</span>: git<span class="variable">@github</span>.<span class="attribute">com</span>:dongoo/dongoo.github.io.git
   <span class="attribute">branch</span>: 
   <span class="attribute">message</span>: 
</code></pre><p>多个部署，之前使用git部署，现在保留，使用git方便版本管理。也以防哪天挂了，可以再搞起。<br>  相关内容参看官方文档: <a href="https://hexo.io/zh-cn/docs/deployment.html" target="_blank" rel="external">https://hexo.io/zh-cn/docs/deployment.html</a></p>
<p> <strong>你会发现选择使用rsync部署时，没有填写密码选项，不用认证吗？那是不可能的！不使用密码就要用密钥，和部署github时生成密钥相似</strong>。<br> 而且这对密钥是可以通用的哟，你只是公开的你的公钥，私钥自己保留着，破解？目前那是相当困难滴。<br> 我之前多次尝试部署不成功，都是没有意识到这一点。所以都失败了。</p>
<p> PS:在digitalocean中可以在创建水滴(Droplet)时候，可以直接添加SSHkey，<br>digitalocean自动将SSHkey写入到系统中，若你使用的是其他主机，请检索相关资料啦。<br>总之，<strong>你需要能在本机使用SSHkey而不是密码，登陆到服务器</strong>，才能成功通过rsync部署HEXO。</p>
<p>当一切都OK时，是 <code>hexo deploy</code> 一下，看看效果。<br>别忘记了修改DNS解析。自己实验的时候可以先修改hosts实现快速切换。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>首先如果想部署在GITHUB上使用HTTPS，就目前来看那是不可能，除非使用github.io域名，所以首先要有一个VPS或云主机，之前做SS时，在digitalocean买了一个水滴，使用也不算多我的BLOG访问量也不高，为了省钱就一起搞吧，也是为了充分利用资源吧  O(∩_∩)O</p>
<p>我的digitalocean推荐链接：使用我的链接，你将有10美元奖励，我也有额外获得。]]>
    
    </summary>
    
      <category term="hexo" scheme="https://blog.lidong.me/tags/hexo/"/>
    
      <category term="http2" scheme="https://blog.lidong.me/tags/http2/"/>
    
      <category term="https" scheme="https://blog.lidong.me/tags/https/"/>
    
      <category term="rsync" scheme="https://blog.lidong.me/tags/rsync/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[快速开启HTTP服务器]]></title>
    <link href="https://blog.lidong.me/2015/quickstarthttp/"/>
    <id>https://blog.lidong.me/2015/quickstarthttp/</id>
    <published>2015-11-08T14:43:41.000Z</published>
    <updated>2015-11-08T15:06:18.000Z</updated>
    <content type="html"><![CDATA[<p>时常需要使用HTTP服务器环境，<br>今天发现一条命名就可以开启服务器（机器上需要安装有Python）</p>
<pre><code>$ python -m SimpleHTTPServer <span class="number">8000</span>
</code></pre><p>8000位端口号，可选，默认是8000，设置成其他比如 8080，8888</p>
<p>另外惊喜的发现，居然可以同时在不同的端口开启HTTP服务器<br><a id="more"></a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>时常需要使用HTTP服务器环境，<br>今天发现一条命名就可以开启服务器（机器上需要安装有Python）</p>
<pre><code>$ python -m SimpleHTTPServer <span class="number">8000</span>
</code></pre><p>8000位端口号，可选，默认是8000，设置成其他比如 8080，8888</p>
<p>另外惊喜的发现，居然可以同时在不同的端口开启HTTP服务器<br>]]>
    
    </summary>
    
      <category term="HTTP" scheme="https://blog.lidong.me/tags/HTTP/"/>
    
      <category term="note" scheme="https://blog.lidong.me/tags/note/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Digitalocean地区迁移]]></title>
    <link href="https://blog.lidong.me/2015/digitalocean-transfer/"/>
    <id>https://blog.lidong.me/2015/digitalocean-transfer/</id>
    <published>2015-10-26T04:34:15.000Z</published>
    <updated>2015-11-06T13:32:28.000Z</updated>
    <content type="html"><![CDATA[<p>在网上看到很多说San Francisco速度快一些，而我用的是Singapore今天测速看了一下，发现San Francisco确实是更快一些，延迟也会更低一些<br><a id="more"></a></p>
<h3 id="1-关机">1.关机</h3><p><img src="http://img3.lidong.me/pic/pic20151026135142pyh8m.png" alt="" title="关机"></p>
<h3 id="2-设置快照(snapshots)">2.设置快照(snapshots)</h3><p>Take a Snapshot</p>
<h3 id="3-迁移">3.迁移</h3><p>将快照发送的sfo（根据快照的大小，可能需要一些时间）<br><img src="http://img3.lidong.me/pic/pic201510261358360rcf4.png" alt=""></p>
<h3 id="4-重装">4.重装</h3><p>也就是重新买一个，在选择镜像(select image)的时候,选择刚刚的snapshots<br><img src="http://img3.lidong.me/pic/pic20151026140158f8vjw.png" alt=""></p>
<p>测速情况<br>San Francisco：<br><img src="http://img3.lidong.me/pic/pic20151026154219qgs3f.png" alt=""><br>Singapore：<br><img src="http://img3.lidong.me/pic/pic20151026154517jodyn.png" alt=""></p>
<h3 id="速度测试连接">速度测试连接</h3><p><a href="https://www.digitalocean.com/community/questions/do-you-have-a-speed-test" target="_blank" rel="external">https://www.digitalocean.com/community/questions/do-you-have-a-speed-test</a></p>
<h4 id="参考链接">参考链接</h4><p><a href="http://boweihe.me/?p=1369" target="_blank" rel="external">http://boweihe.me/?p=1369</a><br><a href="http://www.laozuo.org/3907.html" target="_blank" rel="external">http://www.laozuo.org/3907.html</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在网上看到很多说San Francisco速度快一些，而我用的是Singapore今天测速看了一下，发现San Francisco确实是更快一些，延迟也会更低一些<br>]]>
    
    </summary>
    
      <category term="digitalocean" scheme="https://blog.lidong.me/tags/digitalocean/"/>
    
      <category term="迁移" scheme="https://blog.lidong.me/tags/%E8%BF%81%E7%A7%BB/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[工作一年总结]]></title>
    <link href="https://blog.lidong.me/2015/resign/"/>
    <id>https://blog.lidong.me/2015/resign/</id>
    <published>2015-08-31T17:55:41.000Z</published>
    <updated>2015-11-06T12:25:46.000Z</updated>
    <content type="html"><![CDATA[<p>终于我又要换工作了。在这马上要办离职手续的时期，赶紧总结一下吧～～<br>这份工作算起来刚刚好，干满一年了。之前的PM跟我说，无论工作满意不满意都要尽去做，最好能做满一年。也有人跟我说过，不要浪费时间了，去做就要做自己喜欢的工作吧。<br>现在我算折中了。我算是都做了。<br><a id="more"></a><br>在上一份工作快要离职的时候，我在看那本叫《人人都是产品经理》的书，那时候我就特别想做产品经理，于是找了一份与产品搭点边的工作（实际上貌似与产品关系不大），现在发现我也不太适合产品工作，因为我不愿意吹牛，不想去哄别人。。。<b>想想还是去做实在一些工作，比如软件编程，前端开发</b>，在这休假的时间正好补一补课，虽然之前了解过一些。</p>
<p>回想过去，一年浪费好多时间、机会&amp;&amp;💰💰。<br>虽然我们做的事是直接触及到用户，但没有太大价值365天全年无休，但是做的是基础内容，拿着买白菜💰，却操白粉❤️。加那么多班，最后只有给自己来个长假。</p>
<p>越发要离开的时候，越发不喜欢那工作，好像做错了什么。我本身是不喜欢限制，希望给予和被给予自由的，但是这工作却是去限制别人</p>
<p>回想过去的一年，虽然没有做成什么，但是，在TX感受了一把与TX人工作的感觉，吃了一年TX食堂，坐了一年那2000多块的高级椅子，哈哈哈</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>终于我又要换工作了。在这马上要办离职手续的时期，赶紧总结一下吧～～<br>这份工作算起来刚刚好，干满一年了。之前的PM跟我说，无论工作满意不满意都要尽去做，最好能做满一年。也有人跟我说过，不要浪费时间了，去做就要做自己喜欢的工作吧。<br>现在我算折中了。我算是都做了。<br>]]>
    
    </summary>
    
  </entry>
  
  <entry>
    <title><![CDATA[tar命令]]></title>
    <link href="https://blog.lidong.me/2015/tar/"/>
    <id>https://blog.lidong.me/2015/tar/</id>
    <published>2015-08-30T07:32:25.000Z</published>
    <updated>2015-11-06T12:20:32.000Z</updated>
    <content type="html"><![CDATA[<h3 id="重要的内容放前面">重要的内容放前面</h3><p>解压tar.gz  <code>tar -xzvf nginx-1.8.0.tar.gz</code></p>
<p>归档后gzip压缩 <code>tar -zcvf /tmp/etc.tar.gz /etc</code>(将/etc目录下的文件归档成为/tmp/etc.tar.gz)<br><a id="more"></a></p>
<h3 id="详细讲解">详细讲解</h3><p>tar命令</p>
<p>参数：</p>
<p>-c ：建立一个压缩文件的参数指令(create 的意思)； <br><br>-x ：解开一个压缩文件的参数指令！<br><br>-t ：查看 tarfile 里面的文件！<br></p>
<blockquote>
<p>特别注意，在参数的下达中， c/x/t 仅能存在一个！不可同时存在！<br><br>因为不可能同时压缩与解压缩。<br></p>
</blockquote>
<p>-z ：是否同时具有 gzip 的属性？亦即是否需要用 gzip 压缩？<br><br>-j ：是否同时具有 bzip2 的属性？亦即是否需要用 bzip2 压缩？<br><br>-v ：压缩的过程中显示文件！这个常用，不建议用在背景执行过程！<br><br>-f ：使用档名，请留意，在 f 之后要立即接档名喔！不要再加参数！<br></p>
<blockquote>
<p>例如使用『 tar -zcvfP tfile sfile』就是错误的写法，要写成『 tar -zcvPf tfile sfile』才对喔！<br></p>
</blockquote>
<p>-p ：使用原文件的原来属性（属性不会依据使用者而变）<br><br>-P ：可以使用绝对路径来压缩！<br><br>-N ：比后面接的日期(yyyy/mm/dd)还要新的才会被打包进新建的文件中！<br><br>–exclude FILE：在压缩的过程中，不要将 FILE 打包！ </p>
]]></content>
    <summary type="html">
    <![CDATA[<h3 id="重要的内容放前面">重要的内容放前面</h3><p>解压tar.gz  <code>tar -xzvf nginx-1.8.0.tar.gz</code></p>
<p>归档后gzip压缩 <code>tar -zcvf /tmp/etc.tar.gz /etc</code>(将/etc目录下的文件归档成为/tmp/etc.tar.gz)<br>]]>
    
    </summary>
    
      <category term="tar" scheme="https://blog.lidong.me/tags/tar/"/>
    
      <category term="tar.gz" scheme="https://blog.lidong.me/tags/tar-gz/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[常用的DNS搜集]]></title>
    <link href="https://blog.lidong.me/2015/dns/"/>
    <id>https://blog.lidong.me/2015/dns/</id>
    <published>2015-08-27T15:53:41.000Z</published>
    <updated>2015-11-06T12:43:40.000Z</updated>
    <content type="html"><![CDATA[<p>最近腾讯旗下的Dnspod也推出公共DNS，到此，BAT三家又竞争到一块去了<br><a id="more"></a><br>百度公共DNS<br>180.76.76.76</p>
<p>阿里公共DNS<br>233.5.5.5<br>233.6.6.6</p>
<p>腾讯Dnspod<br>119.29.29.29</p>
<p>114DNS<br>纯净无劫持<br>114.114.114.114<br>114.114.115.115</p>
<p>拦截钓鱼、病毒木马网站<br>114.114.114.119<br>114.114.115.119</p>
<p>拦截色情、病毒木马、钓鱼网站<br>114.114.114.110<br>114.114.115.110</p>
<p>Google DNS<br>8.8.8.8<br>8.8.4.4</p>
<p>OPEN DNS<br>208.67.222.222<br>208.67.220.220</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>最近腾讯旗下的Dnspod也推出公共DNS，到此，BAT三家又竞争到一块去了<br>]]>
    
    </summary>
    
      <category term="dns" scheme="https://blog.lidong.me/tags/dns/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac中在Finder里面打开终端]]></title>
    <link href="https://blog.lidong.me/2015/mac-go2shell/"/>
    <id>https://blog.lidong.me/2015/mac-go2shell/</id>
    <published>2015-08-24T15:01:37.000Z</published>
    <updated>2015-11-06T12:52:53.000Z</updated>
    <content type="html"><![CDATA[<p>在finder中查找文件，更加方便，毕竟是图形界面，在终端中查找文件多麻烦，或许记住命令也很方便，可惜记不住(⊙o⊙)… 还好有解决办法啦。<br><a id="more"></a><br>第一种方法：<br>在Mac App Store 中下载Go2Shell软件，链接<a href="https://itunes.apple.com/us/app/go2shell/id445770608?mt=12" target="_blank" rel="external">https://itunes.apple.com/us/app/go2shell/id445770608?mt=12</a><br>launchpad中找到Go2Shell软件，按住Cmd键，将其拖动到Finder的工具栏上，借用一下图片<br><img src="https://dn-lidongim.qbox.me/mac-go2shell.jpeg" alt=""></p>
<blockquote>
<p>图片来自<a href="http://my.oschina.net/ioslighter/blog/359258" target="_blank" rel="external">http://my.oschina.net/ioslighter/blog/359258</a></p>
</blockquote>
<p>第二种方法：</p>
<p>系统偏好设置 -&gt; 键盘 -&gt; 快捷键 -&gt; 服务，勾选「新建位于文件夹位置的终端窗口」（后面的键盘快捷键可以不选），然后在 Finder 里面选中文件夹右键菜单的「服务」下面就会有「新建位于文件夹位置的终端窗口」这一子菜单了。</p>
<p>两种方法各有优缺点，最佳做法就是把两种方法都弄上，那个方便用那个。</p>
<p>参考：<br><a href="http://my.oschina.net/ioslighter/blog/359258" target="_blank" rel="external">http://my.oschina.net/ioslighter/blog/359258</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>在finder中查找文件，更加方便，毕竟是图形界面，在终端中查找文件多麻烦，或许记住命令也很方便，可惜记不住(⊙o⊙)… 还好有解决办法啦。<br>]]>
    
    </summary>
    
      <category term="Mac小技巧" scheme="https://blog.lidong.me/tags/Mac%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[给Mac添加wget功能]]></title>
    <link href="https://blog.lidong.me/2015/mac-wget/"/>
    <id>https://blog.lidong.me/2015/mac-wget/</id>
    <published>2015-08-23T14:01:25.000Z</published>
    <updated>2015-11-06T12:53:32.000Z</updated>
    <content type="html"><![CDATA[<p>wget是个好工具，但是Mac上本身没有这个工具<br><img src="https://dn-lidongim.qbox.me/15-8-23/92308559.jpg" alt=""><br>下面我们给Mac添加wget功能<br><a id="more"></a></p>
<ol>
<li><p>打开<a href="https://ftp.gnu.org/gnu/wget/选择下载最新版wget（我下载的是tar.gz版）" target="_blank" rel="external">https://ftp.gnu.org/gnu/wget/选择下载最新版wget（我下载的是tar.gz版）</a><br><img src="https://dn-lidongim.qbox.me/15-8-23/11473128.jpg" alt=""></p>
</li>
<li><p>找到下载的文件，双击解压文件得到一个文件夹，在终端中打开进入到该文件夹</p>
</li>
<li><p>输入 <code>./configure --with-ssl=openssl</code>后按下回车并等它安装完成</p>
</li>
<li><p>输入 make 后同样按下回车</p>
</li>
<li><p>然后输入代码<code>sudo make install</code>（有可能需要输入你的Mac密码）就安装完成啦！</p>
</li>
<li><p>现在测试一下是否安装完成，输入 <code>wget http://www.lidong.im/</code> ，如果正常执行就说明成功啦！（如果不行则重新从头做一次）</p>
</li>
</ol>
<p>PS：</p>
<p>其实Mac也自带了一个Curl同样也可以下载网页，用法：<br><code>curl -O [文件的URL]</code></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>wget是个好工具，但是Mac上本身没有这个工具<br><img src="https://dn-lidongim.qbox.me/15-8-23/92308559.jpg" alt=""><br>下面我们给Mac添加wget功能<br>]]>
    
    </summary>
    
      <category term="Mac小技巧" scheme="https://blog.lidong.me/tags/Mac%E5%B0%8F%E6%8A%80%E5%B7%A7/"/>
    
      <category term="wget" scheme="https://blog.lidong.me/tags/wget/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Mac上一些软件]]></title>
    <link href="https://blog.lidong.me/2015/mac-software/"/>
    <id>https://blog.lidong.me/2015/mac-software/</id>
    <published>2015-08-23T12:16:19.000Z</published>
    <updated>2015-11-06T12:57:02.000Z</updated>
    <content type="html"><![CDATA[<p>刚刚开始使用Mac电脑，木有经验，从0开始，收集一些常用的软件作为备份！备份！备份！<br><a id="more"></a></p>
<ul>
<li>QQ    (必备)</li>
<li>微信    （不解释）</li>
<li>网易云音乐   （良心之作）</li>
<li>Chrome    （必备）</li>
<li>Evernote  （记录笔记）</li>
<li>Day One   （记录日记）</li>
<li>reeder    （rss阅读）</li>
<li>mou   （markdown）</li>
<li>lastpass  （密码记录）</li>
<li>sublime text  （文本编辑器）</li>
<li>迅雷    （下载，有时会用到）</li>
<li>百度云 （资源丰富）</li>
<li>Shadowsocks   （我朝必备）</li>
<li>Dropbox   （必备神器）</li>
</ul>
<p>//以下2015-10-27更新添加（大部分是付费软件）</p>
<ul>
<li>1password (密码管理)</li>
<li>Alfred 2 （升级版spotlight，我用的不多）</li>
<li>bartrnder 2 （通知栏工具）</li>
<li>caffeine （免费，防止休眠）</li>
<li>cheatsheet （免费，查看快捷键）</li>
<li>go2shell（免费，finder中打开Terminal） </li>
<li>ithoughtsX (思维导图)</li>
<li>monosnap（免费，截图上传）</li>
<li>paste（剪切版工具）</li>
<li>popclip （类似而胜于右键的工具）</li>
<li>ulysses （markdown文档）</li>
<li>ember (图片素材管理)</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<p>刚刚开始使用Mac电脑，木有经验，从0开始，收集一些常用的软件作为备份！备份！备份！<br>]]>
    
    </summary>
    
      <category term="Mac" scheme="https://blog.lidong.me/tags/Mac/"/>
    
      <category term="软件" scheme="https://blog.lidong.me/tags/%E8%BD%AF%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[奢侈一回，Mac到手]]></title>
    <link href="https://blog.lidong.me/2015/get-mac/"/>
    <id>https://blog.lidong.me/2015/get-mac/</id>
    <published>2015-08-03T12:17:00.000Z</published>
    <updated>2015-08-24T16:25:03.000Z</updated>
    <content type="html"><![CDATA[<p>大家都说Mac好呀，各种追捧，我也按按捺不住了，去买了一台Mac，第一次去香港就只为买一台💻 ：）</p>
<p>作为穷屌丝，木有钱，所以去香港买喽，还算是比较顺利，木有被逮着。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>大家都说Mac好呀，各种追捧，我也按按捺不住了，去买了一台Mac，第一次去香港就只为买一台💻 ：）</p>
<p>作为穷屌丝，木有钱，所以去香港买喽，还算是比较顺利，木有被逮着。</p>
]]>
    </summary>
    
      <category term="Mac" scheme="https://blog.lidong.me/tags/Mac/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[修改WordPress邮件通知的发件人]]></title>
    <link href="https://blog.lidong.me/2015/change-wordpress-mail-from/"/>
    <id>https://blog.lidong.me/2015/change-wordpress-mail-from/</id>
    <published>2015-02-01T12:45:13.000Z</published>
    <updated>2015-11-06T13:02:43.000Z</updated>
    <content type="html"><![CDATA[<p>使用新的主机，发现我的WordPress可以不使用插件就可以发送通知邮件了，但是发件人是wordpress，与之前自定义的不一样。<a href="https://blog.hackroad.com/life/1454.html" target="_blank" rel="external">搜索找到方法</a>，记录一下</p>
<pre><code> 修改wp-includes目录下的pluggable.php文件，在最后一行加入如下代码：
 // 更改默认发信地址
add_filter(<span class="string">'wp_mail_from'</span>,<span class="string">'mail_from'</span>);
<span class="keyword">function</span> mail_from() {
<span class="variable">$emailaddress</span> = <span class="string">'admin@yourname.com'</span>; //你的邮箱地址
return <span class="variable">$emailaddress</span>;
}
// 更改默认发信人名字
add_filter(<span class="string">'wp_mail_from_name'</span>,<span class="string">'mail_from_name'</span>);
<span class="keyword">function</span> mail_from_name() {
<span class="variable">$sendername</span> = <span class="string">'youname'</span>; //你的名字
return <span class="variable">$sendername</span>;
}
</code></pre><!--怎么修改注释都有，网上错误的方法是修改functions.php，我修改过后博客直接打不开了，为什么是修改pluggable.php而不是functions.php？这是pluggable.php中的一段： Using the two 'wp_mail_from' and 'wp_mail_from_name' hooks allow from * creating a from address like 'Name &lt;email@address.com&gt;' when both are set. If * just 'wp_mail_from' is set, then just the email address will be used with no * name. 想必大家都明白了，人家说的很清楚 'wp_mail_from' 和 'wp_mail_from_name' 这两个函数是这里的。-->
]]></content>
    <summary type="html">
    <![CDATA[<p>使用新的主机，发现我的WordPress可以不使用插件就可以发送通知邮件了，但是发件人是wordpress，与之前自定义的不一样。<a href="https://blog.hackroad.com/life/1454.html" target="_blank" rel="]]>
    </summary>
    
      <category term="wordprees" scheme="https://blog.lidong.me/tags/wordprees/"/>
    
      <category term="电脑网络" scheme="https://blog.lidong.me/categories/%E7%94%B5%E8%84%91%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[在电脑上打开手机网页－－在电脑上完成触屏操作]]></title>
    <link href="https://blog.lidong.me/2014/play-buluo-with-pc/"/>
    <id>https://blog.lidong.me/2014/play-buluo-with-pc/</id>
    <published>2014-11-04T00:30:46.000Z</published>
    <updated>2015-10-21T00:39:42.000Z</updated>
    <content type="html"><![CDATA[<p>兴趣部落是一款在手机QQ上的类似贴吧的产品，我现在每天的工作就是围绕兴趣部落，前几天运气背，把手机给整坏了，木有手机了，工作怎么进行。虽然我们有可用PC端的后台，但是我就想用玩前端的，前端的才可以发帖，回帖嘛，要不然玩得多没意思。</p>
<h3 id="正文开始">正文开始</h3><p>1.准备工具：chrome浏览器（我使用的是chrome 38，不同的版本可能有细微的差别）</p>
<p>2.打开兴趣部落的网址：<a href="http://xiaoqu.qq.com/mobile/" title="兴趣部落" target="_blank" rel="external">http://xiaoqu.qq.com/mobile/</a>（网址会变成其他，不用担心，如果不放心也可以把这一步放在第五步之后）（网址可以通过关注兴趣部落官方微信获取噢 o(∩_∩)o ）</p>
<p>3.按F12 打开浏览器的开发者工具；</p>
<p>4.按图示操作，先选择弹出的开发者工具的左上角第二个图标，再点击右边圈中的按钮，并最小化弹出窗口（切记弹出的窗口不可以关闭。）</p>
<p><a href="https://ilidong.com/wp-content/uploads/2014/11/20141104081200.png" target="_blank" rel="external">undefined</a><br>（点击可以放大）</p>
<p>5.按图示设置，手机机型建议选择安卓机型，（苹果机型进去后没有搜索框，其它机型请自行测试）</p>
<p><a href="https://ilidong.com/wp-content/uploads/2014/11/20141104084248.png" target="_blank" rel="external">undefined</a><br>（点击可以放大）</p>
<p>6.按F5刷新页面，即可见到熟悉的页面了</p>
<p>现在鼠标就是你的手的了，你可以用鼠标的点击代替手指的点按，用鼠标的点击按住拖动鼠标来代替手指的滑动。</p>
<p>以上的方法适用于所有你想在电脑端浏览手机版页面，因为chrome浏览器已经帮我们配置好了手机模拟环境，不行你可以试试打开 <a href="http://3g.qq.com/" title="腾讯网" target="_blank" rel="external">腾讯网http://3g.qq.com/</a> <a href="http://3g.sina.com.cn/" title="新浪网" target="_blank" rel="external">新浪网http://3g.sina.com.cn/</a> 是不是都是手机版的页面呢，你选的手机型号比较NB的，还是触屏版噢，还能用鼠标操作噢。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>兴趣部落是一款在手机QQ上的类似贴吧的产品，我现在每天的工作就是围绕兴趣部落，前几天运气背，把手机给整坏了，木有手机了，工作怎么进行。虽然我们有可用PC端的后台，但是我就想用玩前端的，前端的才可以发帖，回帖嘛，要不然玩得多没意思。</p>
<h3 id="正文开始">正文开]]>
    </summary>
    
      <category term="兴趣部落" scheme="https://blog.lidong.me/tags/%E5%85%B4%E8%B6%A3%E9%83%A8%E8%90%BD/"/>
    
      <category term="触屏版" scheme="https://blog.lidong.me/tags/%E8%A7%A6%E5%B1%8F%E7%89%88/"/>
    
      <category term="电脑网络" scheme="https://blog.lidong.me/categories/%E7%94%B5%E8%84%91%E7%BD%91%E7%BB%9C/"/>
    
  </entry>
  
</feed>
